[{"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/index.jsx":"1","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/reportWebVitals.js":"2","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/App.jsx":"3","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/DropZone.jsx":"4","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/Header.jsx":"5","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/UploadInput.jsx":"6","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-components/reducers/loadTableReducer.js":"7","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-components/constants/loadTableConstants.js":"8","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/pages/RegisterPage.jsx":"9","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/pages/LoginPage.jsx":"10","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/FormContainer.jsx":"11","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/Message.jsx":"12","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/Loader.jsx":"13","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-base-logic/common/actions.js":"14","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-base-logic/lib/store/index.js":"15","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-base-logic/lib/utils/index.js":"16","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-base-logic/common/constants.js":"17","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-base-logic/lib/store/store.js":"18","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-base-logic/lib/utils/makeCols.js":"19","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-base-logic/lib/utils/logger.js":"20","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-base-logic/common/reducer.js":"21","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-components/reducers/userReducer.js":"22","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-components/constants/userConstants.js":"23","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-components/actions/userActions.js":"24","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/data/data.js":"25","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/TableLoad.jsx":"26","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/pages/ProfilePage.jsx":"27"},{"size":457,"mtime":1610526652736,"results":"28","hashOfConfig":"29"},{"size":362,"mtime":1610522677727,"results":"30","hashOfConfig":"29"},{"size":1196,"mtime":1610650226018,"results":"31","hashOfConfig":"29"},{"size":3409,"mtime":1610616611349,"results":"32","hashOfConfig":"29"},{"size":3174,"mtime":1610649870554,"results":"33","hashOfConfig":"29"},{"size":629,"mtime":1610523026083,"results":"34","hashOfConfig":"29"},{"size":550,"mtime":1610528750943,"results":"35","hashOfConfig":"29"},{"size":158,"mtime":1610528654681,"results":"36","hashOfConfig":"29"},{"size":4220,"mtime":1610548923352,"results":"37","hashOfConfig":"29"},{"size":2868,"mtime":1610549805866,"results":"38","hashOfConfig":"29"},{"size":370,"mtime":1610575547226,"results":"39","hashOfConfig":"29"},{"size":255,"mtime":1610533755831,"results":"40","hashOfConfig":"29"},{"size":400,"mtime":1610533786634,"results":"41","hashOfConfig":"29"},{"size":2012,"mtime":1610661394862,"results":"42","hashOfConfig":"29"},{"size":32,"mtime":1599939236000,"results":"43","hashOfConfig":"29"},{"size":43,"mtime":1599939236000,"results":"44","hashOfConfig":"29"},{"size":272,"mtime":1610617407360,"results":"45","hashOfConfig":"29"},{"size":1287,"mtime":1610638557366,"results":"46","hashOfConfig":"29"},{"size":210,"mtime":1599939236000,"results":"47","hashOfConfig":"29"},{"size":230,"mtime":1610625853998,"results":"48","hashOfConfig":"29"},{"size":907,"mtime":1610617662140,"results":"49","hashOfConfig":"29"},{"size":2181,"mtime":1610533949430,"results":"50","hashOfConfig":"29"},{"size":819,"mtime":1610533867404,"results":"51","hashOfConfig":"29"},{"size":4044,"mtime":1610640462670,"results":"52","hashOfConfig":"29"},{"size":9017,"mtime":1610571117734,"results":"53","hashOfConfig":"29"},{"size":8869,"mtime":1610651919572,"results":"54","hashOfConfig":"29"},{"size":4372,"mtime":1610647057424,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"puktd3",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"58"},"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/index.jsx",[],["114","115"],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/reportWebVitals.js",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/App.jsx",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/DropZone.jsx",["116"],"import React, {useEffect, useState} from 'react'\nimport styled from 'styled-components'\nimport XLSX from 'xlsx'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {UploadInput} from \"./UploadInput\";\nimport {setColumns, setData, setFileName} from \"./redux-base-logic/common/actions\";\nimport {makeColumns} from \"./redux-base-logic/lib/utils\";\nimport {Container} from \"react-bootstrap\";\n\nconst UploadWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 500px;\n  height: 400px;\n  margin: 5% auto;\n  background: ${({isDragging}) => isDragging ? 'pink' : 'whitesmoke'};\n  border: 2px dashed black;\n}\n`\nconst DropZoneTitle = styled.div`\n  font-size: 25px;\n  text-align: center;\n  width: 100%;\n  padding: 5px;\n`\nconst SuccessTitle = styled.h3`\n  color: #5a5a5a;\n`\n\nexport const DropZone = ({ history }) => {\n    const [isDragging, setIsDragging] = useState(false)\n    const fileName = useSelector(state => state.data.fileName)\n    const dispatch = useDispatch()\n\n    const handleDragEnter = e => {\n        e.preventDefault()\n        e.stopPropagation()\n        console.log('ENTER')\n        if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\n            setIsDragging(true)\n        }\n    }\n\n    const handleDragLeave = e => {\n        e.preventDefault()\n        e.stopPropagation()\n        setIsDragging(false)\n    }\n\n    const handleDrop = e => {\n        e.preventDefault()\n        e.stopPropagation()\n        setIsDragging(false)\n        const files = e.dataTransfer.files, f = files[0]\n        const reader = new FileReader()\n\n        reader.onload = () => {\n            if (files.length) {\n                handleFile(files[0])\n            }\n        }\n        reader.readAsArrayBuffer(f)\n    }\n\n    const handleFile = async (file) => {\n        const reader = new FileReader()\n        const rABS = !!reader.readAsBinaryString\n        reader.onload = async (e) => {\n            const bstr = e.target.result\n            const wb = XLSX.read(bstr, {type: rABS ? 'binary' : 'array'})\n            const wsname = wb.SheetNames[0]\n            const ws = wb.Sheets[wsname]\n            const data = XLSX.utils.sheet_to_json(ws, {header: 1})\n            dispatch(setData(data))\n            dispatch(setColumns(makeColumns(ws['!ref'])))\n            dispatch(setFileName(file.name))\n        }\n        if (rABS) reader.readAsBinaryString(file); else reader.readAsArrayBuffer(file);\n    }\n    const userLogin = useSelector(state => state.userLogin)\n    const {userInfo} = userLogin\n\n    useEffect(() => {\n        if(!userInfo) {\n            history.push('/login')\n        }\n    }, [userInfo])\n\n    return (\n        <Container>\n            <UploadWrapper isDragging={isDragging} onDragEnter={handleDragEnter} onDragLeave={handleDragLeave}\n                           onDrop={handleDrop}>\n                <DropZoneTitle>\n                    {\n                        fileName ? <SuccessTitle>{fileName} <br/>Успішно завантажено <br/> <strong\n                            style={{textDecoration: \"underline\"}}>натисніть показати\n                            таблицю</strong></SuccessTitle> : 'Перетягніть сюди файл'\n                    }\n                </DropZoneTitle>\n                <UploadInput handleFile={handleFile}/>\n            </UploadWrapper>\n        </Container>\n    )\n}\n","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/Header.jsx",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/UploadInput.jsx",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-components/reducers/loadTableReducer.js",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-components/constants/loadTableConstants.js",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/pages/RegisterPage.jsx",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/pages/LoginPage.jsx",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/FormContainer.jsx",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/Message.jsx",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/Loader.jsx",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-base-logic/common/actions.js",["117"],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-base-logic/lib/store/index.js",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-base-logic/lib/utils/index.js",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-base-logic/common/constants.js",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-base-logic/lib/store/store.js",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-base-logic/lib/utils/makeCols.js",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-base-logic/lib/utils/logger.js",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-base-logic/common/reducer.js",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-components/reducers/userReducer.js",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-components/constants/userConstants.js",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-components/actions/userActions.js",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/data/data.js",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/TableLoad.jsx",["118","119","120","121"],"import React, {useEffect, useState} from 'react'\nimport styled from 'styled-components'\nimport {useTable, usePagination} from 'react-table'\nimport {dataColumn} from \"../data/data\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Loader from \"./Loader\";\nimport Message from \"./Message\";\nimport {setDataUpdate} from \"./redux-base-logic/common/actions\";\nimport {Button, Modal} from \"react-bootstrap\";\n\nconst Styles = styled.div`\n  padding: 1rem;\n\n  table {\n    border-spacing: 0;\n    border: 1px solid black;\n\n    tr {\n      :last-child {\n        td {\n          border-bottom: 0;\n        }\n      }\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.5rem;\n      border: 2px solid slategray;\n\n      :last-child {\n        border-right: 0;\n      }\n\n      input {\n        font-size: 1rem;\n        padding: 0;\n        margin: 0;\n        border: 0;\n      }\n    }\n  }\n\n  .pagination {\n    padding: 0.5rem;\n    color: slategray;\n  }\n`\n\nconst EditableCell = ({\n                          value: initialValue,\n                          row: {index},\n                          column: {id},\n                          updateMyData,\n                      }) => {\n    const [value, setValue] = React.useState(initialValue)\n\n    const onChange = e => {\n        setValue(e.target.value)\n    }\n\n    const onBlur = () => {\n        updateMyData(index, id, value)\n    }\n\n    React.useEffect(() => {\n        setValue(initialValue)\n    }, [initialValue])\n    return <input value={value} onChange={onChange} onBlur={onBlur}/>\n}\n\nconst defaultColumn = {\n    Cell: EditableCell,\n}\n\nfunction Table({columns, data, updateMyData, skipPageReset}) {\n\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        prepareRow,\n        page,\n        canPreviousPage,\n        canNextPage,\n        pageOptions,\n        pageCount,\n        gotoPage,\n        nextPage,\n        previousPage,\n        setPageSize,\n        state: {pageIndex, pageSize},\n    } = useTable(\n        {\n            columns,\n            data,\n            defaultColumn,\n            autoResetPage: !skipPageReset,\n            updateMyData,\n        },\n        usePagination\n    )\n\n    // Render the UI for your table\n    return (\n        <>\n            <table {...getTableProps()}>\n                <thead>\n                {headerGroups.map(headerGroup => (\n                    <tr {...headerGroup.getHeaderGroupProps()}>\n                        {headerGroup.headers.map(column => (\n                            <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n                        ))}\n                    </tr>\n                ))}\n                </thead>\n                <tbody {...getTableBodyProps()}>\n                {page.map((row, i) => {\n                    prepareRow(row)\n                    return (\n                        <tr {...row.getRowProps()}>\n                            {row.cells.map(cell => {\n                                return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                            })}\n                        </tr>\n                    )\n                })}\n                </tbody>\n            </table>\n            <div style={{display: \"flex\", WebkitAlignItems: \"center\"}}>\n                <div>\n                    <ul className=\"pagination\">\n                        <li className=\"page-item\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n                            <a className=\"page-link\" href=\"#\">\n                                <i className=\"fas fa-angle-double-left\"></i>\n                            </a>\n                        </li>\n                        <li className=\"page-item\" onClick={() => previousPage()} disabled={!canPreviousPage}>\n                            <a className=\"page-link\" href=\"#\">\n                                <i className=\"fas fa-arrow-left\"></i>\n                            </a>\n                        </li>\n                        <li className=\"page-item\" onClick={() => nextPage()} disabled={!canNextPage}>\n                            <a className=\"page-link\" href=\"#\">\n                                <i className=\"fas fa-arrow-right\"></i>\n                            </a>\n                        </li>\n                        <li className=\"page-item\">\n                            <a className=\"page-link\" href=\"#\" onClick={() => gotoPage(pageCount - 1)}\n                               disabled={!canNextPage}>\n                                <i className=\"fas fa-angle-double-right\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <span className=\"blockquote\">\n          Сторінка{' '}\n                    <strong>\n            {pageIndex + 1} з {pageOptions.length}\n          </strong>{' '}\n                    Перейти на сторінку:{'      '}\n                </span>\n                <div style={{display: \"flex\", marginTop: \"-1.1rem\"}}>\n                <span>\n                    <input\n                        className=\"form-control\"\n                        type=\"number\"\n                        defaultValue={pageIndex + 1}\n                        onChange={e => {\n                            const page = e.target.value ? Number(e.target.value) - 1 : 0\n                            gotoPage(page)\n                        }}\n                        style={{width: '100px'}}\n                    />\n        </span>{' '}\n                    <select\n                        value={pageSize}\n                        onChange={e => {\n                            setPageSize(Number(e.target.value))\n                        }}\n                        style={{width: \"14rem\"}}\n                        className=\"form-control\"\n                    >\n                        {[10, 20, 40, 60, 80, 100].map(pageSize => (\n                            <option key={pageSize} value={pageSize}>\n                                Переглянути {pageSize} рядків\n                            </option>\n                        ))}\n                    </select>\n                </div>\n            </div>\n        </>\n    )\n}\n\nconst TableLoad = () => {\n    const dispatch = useDispatch()\n    const columns = React.useMemo(\n        () => dataColumn,\n        []\n    )\n\n    const {parsedData, loading, error} = useSelector(state => state.data)\n    const [data, setData] = React.useState(() => parsedData)\n    const [skipPageReset, setSkipPageReset] = React.useState(false)\n    const [show, setShow] = useState(false)\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const updateMyData = (rowIndex, columnId, value) => {\n        setSkipPageReset(true)\n        setData(old =>\n            old.map((row, index) => {\n                if (index === rowIndex) {\n                    return {\n                        ...old[rowIndex],\n                        [columnId]: value,\n                    }\n                }\n                return row\n            })\n        )\n    }\n\n    const saveDataTable = () => {\n        dispatch(setDataUpdate(data))\n        handleClose()\n    }\n\n    useEffect(() => {\n        setSkipPageReset(false)\n    }, [data])\n    return (\n        <Styles>\n            {loading ? <Loader/> : error ? <Message variant=\"danger\">{error}</Message> : parsedData ? (\n                <>\n                    <Table\n                        columns={columns}\n                        data={data}\n                        updateMyData={updateMyData}\n                        skipPageReset={skipPageReset}\n                    />\n                    <Button\n                        variant=\"secondary\"\n                        size=\"lg\"\n                        block\n                        onClick={handleShow}\n                        style={{width: \"30rem\", marginLeft: \"auto\", marginRight: \"auto\"}}\n                    >\n                        Сохранить\n                    </Button>\n                    <Modal show={show} onHide={handleClose} animation={false}>\n                        <Modal.Header closeButton>\n                            <Modal.Title>Бажаю міцного здоров'я!</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>Ви добавили зміни у проект ви згодні зберегти їх?</Modal.Body>\n                        <Modal.Footer>\n                            <Button variant=\"secondary\" onClick={handleClose}>\n                                Ні\n                            </Button>\n                            <Button variant=\"primary\" onClick={saveDataTable}>\n                                Так\n                            </Button>\n                        </Modal.Footer>\n                    </Modal>\n                </>\n            ) : <Loader/>}\n        </Styles>\n    )\n}\n\nexport default TableLoad\n","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/pages/ProfilePage.jsx",["122"],"import React, {useState, useEffect} from \"react\"\nimport {Form, Button} from \"react-bootstrap\"\nimport {useDispatch, useSelector} from \"react-redux\"\nimport {getUserProfile, updateUserProfile} from \"../redux-components/actions/userActions\";\nimport Message from \"../Message\";\nimport Loader from \"../Loader\";\nimport FormContainer from \"../FormContainer\";\n\nconst ProfileScreen = ({history}) => {\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const userLogin = useSelector(state => state.userLogin)\n    const {userInfo} = userLogin\n\n    const userDetails = useSelector(state => state.userDetails)\n    const {user, loading, error} = userDetails\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const {success} = userUpdateProfile\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if (password !== confirmPassword) {\n            setMessage('Password is not match')\n        } else {\n            dispatch(updateUserProfile({id: user._id, name, email, password}))\n        }\n    }\n\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            if (!user || !user.name || success) {\n                dispatch(getUserProfile('profile'))\n            } else {\n                debugger\n                setName(user.name)\n                setEmail(user.email)\n            }\n        }\n    }, [userInfo, history, user, success])\n\n    return (\n        <>\n            {message && <Message variant='danger'>{message}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {success && <Message variant='success'>Profile Updated</Message>}\n            {loading ? <Loader/> :\n                (\n                    <FormContainer>\n                        <h2>User profile</h2>\n                        <Form onSubmit={submitHandler}>\n                            <Form.Group controlId='name'>\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control\n                                    type='name'\n                                    placeholder='Enter name'\n                                    value={name}\n                                    onChange={e => setName(e.target.value)}\n                                />\n                            </Form.Group>\n\n                            <Form.Group controlId='email'>\n                                <Form.Label>Email Address</Form.Label>\n                                <Form.Control\n                                    type='email'\n                                    placeholder='Enter email'\n                                    value={email}\n                                    onChange={e => setEmail(e.target.value)}\n                                />\n                            </Form.Group>\n\n                            <Form.Group controlId='password'>\n                                <Form.Label>Password</Form.Label>\n                                <Form.Control\n                                    type='password'\n                                    placeholder='Enter password'\n                                    value={password}\n                                    onChange={e => setPassword(e.target.value)}\n                                />\n                            </Form.Group>\n\n                            <Form.Group controlId='confirmPassword'>\n                                <Form.Label>Confirm password</Form.Label>\n                                <Form.Control\n                                    type='password'\n                                    placeholder='Enter confirmPassword'\n                                    value={confirmPassword}\n                                    onChange={e => setConfirmPassword(e.target.value)}\n                                />\n                            </Form.Group>\n\n                            <Button type='submit' variant='primary'>\n                                UPDATE\n                            </Button>\n                        </Form>\n                    </FormContainer>\n                )}\n        </>\n    )\n}\n\nexport default ProfileScreen",{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":89,"column":8,"nodeType":"129","endLine":89,"endColumn":18,"suggestions":"130"},{"ruleId":"131","severity":1,"message":"132","line":9,"column":37,"nodeType":"133","messageId":"134","endLine":9,"endColumn":39},{"ruleId":"135","severity":1,"message":"136","line":135,"column":29,"nodeType":"137","endLine":135,"endColumn":63},{"ruleId":"135","severity":1,"message":"136","line":140,"column":29,"nodeType":"137","endLine":140,"endColumn":63},{"ruleId":"135","severity":1,"message":"136","line":145,"column":29,"nodeType":"137","endLine":145,"endColumn":63},{"ruleId":"135","severity":1,"message":"136","line":150,"column":29,"nodeType":"137","endLine":151,"endColumn":56},{"ruleId":"127","severity":1,"message":"138","line":49,"column":8,"nodeType":"129","endLine":49,"endColumn":42,"suggestions":"139"},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["142"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["143"],"no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},"Update the dependencies array to be: [history, userInfo]",{"range":"148","text":"149"},"Update the dependencies array to be: [userInfo, history, user, success, dispatch]",{"range":"150","text":"151"},[2651,2661],"[history, userInfo]",[1611,1645],"[userInfo, history, user, success, dispatch]"]