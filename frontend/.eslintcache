[{"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/index.jsx":"1","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/reportWebVitals.js":"2","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/App.jsx":"3","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/DropZone.jsx":"4","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/Header.jsx":"5","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/UploadInput.jsx":"6","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-components/reducers/loadTableReducer.js":"7","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-components/constants/loadTableConstants.js":"8","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/pages/RegisterPage.jsx":"9","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/pages/LoginPage.jsx":"10","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/FormContainer.jsx":"11","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/Message.jsx":"12","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/Loader.jsx":"13","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-base-logic/common/actions.js":"14","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-base-logic/lib/store/index.js":"15","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-base-logic/lib/utils/index.js":"16","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-base-logic/common/constants.js":"17","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-base-logic/lib/store/store.js":"18","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-base-logic/lib/utils/makeCols.js":"19","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-base-logic/lib/utils/logger.js":"20","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-base-logic/common/reducer.js":"21","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-components/reducers/userReducer.js":"22","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-components/constants/userConstants.js":"23","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-components/actions/userActions.js":"24","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/data/data.js":"25","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/TableLoad.jsx":"26","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/pages/ProfilePage.jsx":"27","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/pages/ChangeVersionTable.jsx":"28","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-components/actions/loadTableActions.js":"29","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/pages/TablePage.jsx":"30"},{"size":457,"mtime":1610526652736,"results":"31","hashOfConfig":"32"},{"size":362,"mtime":1610522677727,"results":"33","hashOfConfig":"32"},{"size":1447,"mtime":1610784490327,"results":"34","hashOfConfig":"32"},{"size":3409,"mtime":1610724757091,"results":"35","hashOfConfig":"32"},{"size":3384,"mtime":1610724757091,"results":"36","hashOfConfig":"32"},{"size":629,"mtime":1610523026083,"results":"37","hashOfConfig":"32"},{"size":1651,"mtime":1610726557737,"results":"38","hashOfConfig":"32"},{"size":700,"mtime":1610724757095,"results":"39","hashOfConfig":"32"},{"size":4220,"mtime":1610724757091,"results":"40","hashOfConfig":"32"},{"size":2868,"mtime":1610724757091,"results":"41","hashOfConfig":"32"},{"size":370,"mtime":1610724757091,"results":"42","hashOfConfig":"32"},{"size":255,"mtime":1610724757091,"results":"43","hashOfConfig":"32"},{"size":400,"mtime":1610724757091,"results":"44","hashOfConfig":"32"},{"size":3369,"mtime":1610789611997,"results":"45","hashOfConfig":"32"},{"size":32,"mtime":1610724757091,"results":"46","hashOfConfig":"32"},{"size":43,"mtime":1610724757095,"results":"47","hashOfConfig":"32"},{"size":468,"mtime":1610724757091,"results":"48","hashOfConfig":"32"},{"size":1430,"mtime":1610724757095,"results":"49","hashOfConfig":"32"},{"size":210,"mtime":1610724757095,"results":"50","hashOfConfig":"32"},{"size":230,"mtime":1610724757095,"results":"51","hashOfConfig":"32"},{"size":1638,"mtime":1610724757091,"results":"52","hashOfConfig":"32"},{"size":2239,"mtime":1610724757095,"results":"53","hashOfConfig":"32"},{"size":890,"mtime":1610724757095,"results":"54","hashOfConfig":"32"},{"size":4513,"mtime":1610724757095,"results":"55","hashOfConfig":"32"},{"size":9017,"mtime":1610724757095,"results":"56","hashOfConfig":"32"},{"size":8658,"mtime":1610790098002,"results":"57","hashOfConfig":"32"},{"size":4706,"mtime":1610724757091,"results":"58","hashOfConfig":"32"},{"size":2446,"mtime":1610724757091,"results":"59","hashOfConfig":"32"},{"size":2031,"mtime":1610781937607,"results":"60","hashOfConfig":"32"},{"size":1289,"mtime":1610788403209,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"puktd3",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"64"},"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/index.jsx",[],["128","129"],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/reportWebVitals.js",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/App.jsx",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/DropZone.jsx",["130"],"import React, {useEffect, useState} from 'react'\nimport styled from 'styled-components'\nimport XLSX from 'xlsx'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {UploadInput} from \"./UploadInput\";\nimport {setColumns, setData, setFileName} from \"./redux-base-logic/common/actions\";\nimport {makeColumns} from \"./redux-base-logic/lib/utils\";\nimport {Container} from \"react-bootstrap\";\n\nconst UploadWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 500px;\n  height: 400px;\n  margin: 5% auto;\n  background: ${({isDragging}) => isDragging ? 'pink' : 'whitesmoke'};\n  border: 2px dashed black;\n}\n`\nconst DropZoneTitle = styled.div`\n  font-size: 25px;\n  text-align: center;\n  width: 100%;\n  padding: 5px;\n`\nconst SuccessTitle = styled.h3`\n  color: #5a5a5a;\n`\n\nexport const DropZone = ({ history }) => {\n    const [isDragging, setIsDragging] = useState(false)\n    const fileName = useSelector(state => state.data.fileName)\n    const dispatch = useDispatch()\n\n    const handleDragEnter = e => {\n        e.preventDefault()\n        e.stopPropagation()\n        console.log('ENTER')\n        if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\n            setIsDragging(true)\n        }\n    }\n\n    const handleDragLeave = e => {\n        e.preventDefault()\n        e.stopPropagation()\n        setIsDragging(false)\n    }\n\n    const handleDrop = e => {\n        e.preventDefault()\n        e.stopPropagation()\n        setIsDragging(false)\n        const files = e.dataTransfer.files, f = files[0]\n        const reader = new FileReader()\n\n        reader.onload = () => {\n            if (files.length) {\n                handleFile(files[0])\n            }\n        }\n        reader.readAsArrayBuffer(f)\n    }\n\n    const handleFile = async (file) => {\n        const reader = new FileReader()\n        const rABS = !!reader.readAsBinaryString\n        reader.onload = async (e) => {\n            const bstr = e.target.result\n            const wb = XLSX.read(bstr, {type: rABS ? 'binary' : 'array'})\n            const wsname = wb.SheetNames[0]\n            const ws = wb.Sheets[wsname]\n            const data = XLSX.utils.sheet_to_json(ws, {header: 1})\n            dispatch(setData(data))\n            dispatch(setColumns(makeColumns(ws['!ref'])))\n            dispatch(setFileName(file.name))\n        }\n        if (rABS) reader.readAsBinaryString(file); else reader.readAsArrayBuffer(file);\n    }\n    const userLogin = useSelector(state => state.userLogin)\n    const {userInfo} = userLogin\n\n    useEffect(() => {\n        if(!userInfo) {\n            history.push('/login')\n        }\n    }, [userInfo])\n\n    return (\n        <Container>\n            <UploadWrapper isDragging={isDragging} onDragEnter={handleDragEnter} onDragLeave={handleDragLeave}\n                           onDrop={handleDrop}>\n                <DropZoneTitle>\n                    {\n                        fileName ? <SuccessTitle>{fileName} <br/>Успішно завантажено <br/> <strong\n                            style={{textDecoration: \"underline\"}}>натисніть показати\n                            таблицю</strong></SuccessTitle> : 'Перетягніть сюди файл'\n                    }\n                </DropZoneTitle>\n                <UploadInput handleFile={handleFile}/>\n            </UploadWrapper>\n        </Container>\n    )\n}\n","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/Header.jsx",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/UploadInput.jsx",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-components/reducers/loadTableReducer.js",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-components/constants/loadTableConstants.js",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/pages/RegisterPage.jsx",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/pages/LoginPage.jsx",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/FormContainer.jsx",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/Message.jsx",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/Loader.jsx",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-base-logic/common/actions.js",["131"],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-base-logic/lib/store/index.js",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-base-logic/lib/utils/index.js",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-base-logic/common/constants.js",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-base-logic/lib/store/store.js",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-base-logic/lib/utils/makeCols.js",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-base-logic/lib/utils/logger.js",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-base-logic/common/reducer.js",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-components/reducers/userReducer.js",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-components/constants/userConstants.js",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-components/actions/userActions.js",["132","133","134"],"import {\n    USER_DETAILS_FAIL,\n    USER_DETAILS_REQUEST, USER_DETAILS_RESET,\n    USER_DETAILS_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGOUT,\n    USER_REGISTER_FAIL,\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_RESET,\n    USER_UPDATE_PROFILE_SUCCESS\n} from \"../constants/userConstants\";\nimport axios from \"axios\";\nimport {SET_DATA_RESET} from \"../../redux-base-logic/common/constants\";\n\nexport const register = (name, email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const {data} = await axios.post(\n            '/api/users',\n            {name, email, password},\n            config\n        )\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message\n        })\n    }\n}\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const {data} = await axios.post(\n            '/api/users/login',\n            {email, password},\n            config\n        )\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n        localStorage.setItem('userInfo', JSON.stringify(data))\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message\n        })\n    }\n}\n\nexport const logout = () => async (dispatch) => {\n    localStorage.removeItem('userInfo')\n    // localStorage.removeItem('parsedData')\n    dispatch({type: USER_LOGOUT})\n    // dispatch({type: USER_UPDATE_PROFILE_RESET})\n    // dispatch({type: USER_DETAILS_RESET})\n    // dispatch({type: SET_DATA_RESET})\n}\n\nexport const getUserProfile = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/profile`,\n            config\n        )\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message\n        })\n    }\n}\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/profile`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n        localStorage.setItem('userInfo', JSON.stringify(data))\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message\n        })\n    }\n}","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/data/data.js",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/TableLoad.jsx",["135","136","137","138","139","140","141","142","143","144"],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/pages/ProfilePage.jsx",["145"],"import React, {useState, useEffect} from \"react\"\nimport {Form, Button} from \"react-bootstrap\"\nimport {useDispatch, useSelector} from \"react-redux\"\nimport {getUserProfile, updateUserProfile} from \"../redux-components/actions/userActions\";\nimport Message from \"../Message\";\nimport Loader from \"../Loader\";\nimport FormContainer from \"../FormContainer\";\nimport {USER_UPDATE_PROFILE_RESET} from \"../redux-components/constants/userConstants\";\n\nconst ProfileScreen = ({history}) => {\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const userLogin = useSelector(state => state.userLogin)\n    const {userInfo} = userLogin\n\n    const userDetails = useSelector(state => state.userDetails)\n    const {user, loading, error} = userDetails\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const {success} = userUpdateProfile\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if (password !== confirmPassword) {\n            setMessage('Password is not match')\n        } else {\n            dispatch(updateUserProfile({id: user._id, name, email, password}))\n        }\n    }\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            if (!user || !user.name || success) {\n                console.log('replace')\n                dispatch(getUserProfile('profile'))\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n            }\n        }\n        return function close() {\n            if (success) {\n                dispatch({type: USER_UPDATE_PROFILE_RESET})\n            }\n        }\n    }, [userInfo, history, user, success])\n\n    return (\n        <>\n            {message && <Message variant='danger'>{message}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {success && <Message variant='success'>Профіль обновлено</Message>}\n            {loading ? <Loader/> :\n                (\n                    <FormContainer>\n                        <h2>Профіль користувача</h2>\n                        <Form onSubmit={submitHandler}>\n                            <Form.Group controlId='name'>\n                                <Form.Label>Ім'я</Form.Label>\n                                <Form.Control\n                                    type='name'\n                                    placeholder='Enter name'\n                                    value={name}\n                                    onChange={e => setName(e.target.value)}\n                                />\n                            </Form.Group>\n\n                            <Form.Group controlId='email'>\n                                <Form.Label>Емейл адреса</Form.Label>\n                                <Form.Control\n                                    type='email'\n                                    placeholder='Enter email'\n                                    value={email}\n                                    onChange={e => setEmail(e.target.value)}\n                                />\n                            </Form.Group>\n\n                            <Form.Group controlId='password'>\n                                <Form.Label>Пароль</Form.Label>\n                                <Form.Control\n                                    type='password'\n                                    placeholder='Enter password'\n                                    value={password}\n                                    onChange={e => setPassword(e.target.value)}\n                                />\n                            </Form.Group>\n\n                            <Form.Group controlId='confirmPassword'>\n                                <Form.Label>Підтвердіть пароль</Form.Label>\n                                <Form.Control\n                                    type='password'\n                                    placeholder='Enter confirmPassword'\n                                    value={confirmPassword}\n                                    onChange={e => setConfirmPassword(e.target.value)}\n                                />\n                            </Form.Group>\n\n                            <Button type='submit' variant='primary'>\n                                Обновити\n                            </Button>\n                        </Form>\n                    </FormContainer>\n                )}\n        </>\n    )\n}\n\nexport default ProfileScreen","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/pages/ChangeVersionTable.jsx",["146"],"import React, {useEffect} from 'react'\nimport {Button, Col, Row, Table} from \"react-bootstrap\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getDataTableLoad} from \"../redux-base-logic/common/actions\";\nimport Loader from \"../Loader\";\nimport Message from \"../Message\";\nimport {deleteDataTableLoad} from \"../redux-components/actions/loadTableActions\";\n\nconst ChangeVersionTable = ({ history }) => {\n    const dispatch = useDispatch()\n\n    const data = useSelector(state => state.data)\n    const {dataTable, loading, error} = data\n\n    const loadTableRemove = useSelector(state => state.loadTableRemove)\n    const {loading: loadingRemove, success: successRemove} = loadTableRemove\n\n    useEffect(() => {\n        if (!dataTable || successRemove) {\n            dispatch(getDataTableLoad())\n        }\n    }, [dispatch, successRemove])\n\n    const showTableLoad = (id) => {\n        history.push(`/table/${id}`)\n    }\n\n    const deleteTableLoad = (id) => {\n        dispatch(deleteDataTableLoad(id))\n    }\n\n    return loading || loadingRemove ? <Loader/> : error ? <Message variant=\"danger\">{error}</Message> : dataTable ? (\n        <Row className=\"justify-content-md-center\">\n            <Col md={8}>\n                <h2 className=\"text-center mb-3 mt-3\">Перегляд змін в таблиці!</h2>\n                <Table striped bordered hover>\n                    <thead>\n                    <tr>\n                        <th>ID</th>\n                        <th>Користувач</th>\n                        <th>Дата створення</th>\n                        <th>Дії</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {dataTable.map(el => (\n                        <tr key={el._id}>\n                            <td>{el._id}</td>\n                            <td>{el.user.name}</td>\n                            <td>{el.createdAt.substring(0, 10)}</td>\n                            <td>\n                                <Button variant=\"light\" onClick={() => showTableLoad(el._id)}>Переглянути</Button>\n                                <Button variant=\"success\" onClick={() => deleteTableLoad(el._id)}>Видалити</Button>\n                            </td>\n                        </tr>\n                    ))}\n                    </tbody>\n                </Table>\n            </Col>\n        </Row>\n    ) : \"\"\n}\n\nexport default ChangeVersionTable\n","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-components/actions/loadTableActions.js",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/pages/TablePage.jsx",["147","148"],"import React, {useEffect, useMemo, useState} from 'react'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {setCurrentTableData} from \"../redux-components/actions/loadTableActions\";\nimport {setDataUpdate} from \"../redux-base-logic/common/actions\";\nimport Loader from \"../Loader\";\nimport Message from \"../Message\";\nimport TableLoad from \"../TableLoad\";\n\nconst TablePage = ({match}) => {\n    const dispatch = useDispatch()\n    const tableId = match.params.id\n    const [show, setShow] = useState(false)\n    const {parsedData, loading, error} = useSelector(state => state.data)\n    const {currentTableData} = useSelector(state => state.currentTableData)\n    useMemo(() => {\n        if (tableId) {\n            dispatch(setCurrentTableData(tableId))\n        }\n    }, [dispatch, tableId])\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    return loading ? <Loader/> : error ?\n        <Message variant=\"danger\">{error}</Message> : parsedData === currentTableData ? (\n            <TableLoad\n                tableId={tableId}\n                parsedData={parsedData}\n                show={show}\n                handleClose={handleClose}\n                handleShow={handleShow}\n            />\n        ) : <Loader/>\n}\n\nexport default TablePage\n",{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","severity":1,"message":"154","line":89,"column":8,"nodeType":"155","endLine":89,"endColumn":18,"suggestions":"156"},{"ruleId":"157","severity":1,"message":"158","line":10,"column":37,"nodeType":"159","messageId":"160","endLine":10,"endColumn":39},{"ruleId":"161","severity":1,"message":"162","line":3,"column":27,"nodeType":"163","messageId":"164","endLine":3,"endColumn":45},{"ruleId":"161","severity":1,"message":"165","line":14,"column":5,"nodeType":"163","messageId":"164","endLine":14,"endColumn":30},{"ruleId":"161","severity":1,"message":"166","line":18,"column":9,"nodeType":"163","messageId":"164","endLine":18,"endColumn":23},{"ruleId":"161","severity":1,"message":"167","line":1,"column":16,"nodeType":"163","messageId":"164","endLine":1,"endColumn":25},{"ruleId":"161","severity":1,"message":"168","line":1,"column":27,"nodeType":"163","messageId":"164","endLine":1,"endColumn":35},{"ruleId":"161","severity":1,"message":"169","line":6,"column":22,"nodeType":"163","messageId":"164","endLine":6,"endColumn":33},{"ruleId":"161","severity":1,"message":"170","line":7,"column":8,"nodeType":"163","messageId":"164","endLine":7,"endColumn":14},{"ruleId":"161","severity":1,"message":"171","line":8,"column":8,"nodeType":"163","messageId":"164","endLine":8,"endColumn":15},{"ruleId":"161","severity":1,"message":"172","line":11,"column":9,"nodeType":"163","messageId":"164","endLine":11,"endColumn":28},{"ruleId":"173","severity":1,"message":"174","line":136,"column":29,"nodeType":"175","endLine":136,"endColumn":63},{"ruleId":"173","severity":1,"message":"174","line":141,"column":29,"nodeType":"175","endLine":141,"endColumn":63},{"ruleId":"173","severity":1,"message":"174","line":146,"column":29,"nodeType":"175","endLine":146,"endColumn":63},{"ruleId":"173","severity":1,"message":"174","line":151,"column":29,"nodeType":"175","endLine":152,"endColumn":56},{"ruleId":"153","severity":1,"message":"176","line":54,"column":8,"nodeType":"155","endLine":54,"endColumn":42,"suggestions":"177"},{"ruleId":"153","severity":1,"message":"178","line":22,"column":8,"nodeType":"155","endLine":22,"endColumn":33,"suggestions":"179"},{"ruleId":"161","severity":1,"message":"167","line":1,"column":16,"nodeType":"163","messageId":"164","endLine":1,"endColumn":25},{"ruleId":"161","severity":1,"message":"180","line":4,"column":9,"nodeType":"163","messageId":"164","endLine":4,"endColumn":22},"no-native-reassign",["181"],"no-negated-in-lhs",["182"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["183"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'USER_DETAILS_RESET' is defined but never used.","Identifier","unusedVar","'USER_UPDATE_PROFILE_RESET' is defined but never used.","'SET_DATA_RESET' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'useSelector' is defined but never used.","'Loader' is defined but never used.","'Message' is defined but never used.","'setCurrentTableData' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["184"],"React Hook useEffect has a missing dependency: 'dataTable'. Either include it or remove the dependency array.",["185"],"'setDataUpdate' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},"Update the dependencies array to be: [history, userInfo]",{"range":"192","text":"193"},"Update the dependencies array to be: [userInfo, history, user, success, dispatch]",{"range":"194","text":"195"},"Update the dependencies array to be: [dataTable, dispatch, successRemove]",{"range":"196","text":"197"},[2651,2661],"[history, userInfo]",[1856,1890],"[userInfo, history, user, success, dispatch]",[819,844],"[dataTable, dispatch, successRemove]"]