[{"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/index.jsx":"1","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/reportWebVitals.js":"2","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/App.jsx":"3","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/DropZone.jsx":"4","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/Header.jsx":"5","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/UploadInput.jsx":"6","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-components/reducers/loadTableReducer.js":"7","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-components/constants/loadTableConstants.js":"8","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/pages/RegisterPage.jsx":"9","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/pages/LoginPage.jsx":"10","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/FormContainer.jsx":"11","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/Message.jsx":"12","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/Loader.jsx":"13","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-base-logic/common/actions.js":"14","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-base-logic/lib/store/index.js":"15","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-base-logic/lib/utils/index.js":"16","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-base-logic/common/constants.js":"17","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-base-logic/lib/store/store.js":"18","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-base-logic/lib/utils/makeCols.js":"19","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-base-logic/lib/utils/logger.js":"20","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-base-logic/common/reducer.js":"21","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-components/reducers/userReducer.js":"22","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-components/constants/userConstants.js":"23","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-components/actions/userActions.js":"24","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/data/data.js":"25","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/TableLoad.jsx":"26","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/pages/ProfilePage.jsx":"27","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/pages/ChangeVersionTable.jsx":"28","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-components/actions/loadTableActions.js":"29"},{"size":457,"mtime":1610526652736,"results":"30","hashOfConfig":"31"},{"size":362,"mtime":1610522677727,"results":"32","hashOfConfig":"31"},{"size":1441,"mtime":1610723508964,"results":"33","hashOfConfig":"31"},{"size":3409,"mtime":1610616611349,"results":"34","hashOfConfig":"31"},{"size":3384,"mtime":1610724135606,"results":"35","hashOfConfig":"31"},{"size":629,"mtime":1610523026083,"results":"36","hashOfConfig":"31"},{"size":1631,"mtime":1610723588803,"results":"37","hashOfConfig":"31"},{"size":700,"mtime":1610723558843,"results":"38","hashOfConfig":"31"},{"size":4220,"mtime":1610548923352,"results":"39","hashOfConfig":"31"},{"size":2868,"mtime":1610549805866,"results":"40","hashOfConfig":"31"},{"size":370,"mtime":1610575547226,"results":"41","hashOfConfig":"31"},{"size":255,"mtime":1610533755831,"results":"42","hashOfConfig":"31"},{"size":400,"mtime":1610533786634,"results":"43","hashOfConfig":"31"},{"size":3128,"mtime":1610722121051,"results":"44","hashOfConfig":"31"},{"size":32,"mtime":1599939236000,"results":"45","hashOfConfig":"31"},{"size":43,"mtime":1599939236000,"results":"46","hashOfConfig":"31"},{"size":468,"mtime":1610722121051,"results":"47","hashOfConfig":"31"},{"size":1430,"mtime":1610723635051,"results":"48","hashOfConfig":"31"},{"size":210,"mtime":1599939236000,"results":"49","hashOfConfig":"31"},{"size":230,"mtime":1610625853998,"results":"50","hashOfConfig":"31"},{"size":1638,"mtime":1610722121051,"results":"51","hashOfConfig":"31"},{"size":2239,"mtime":1610722121051,"results":"52","hashOfConfig":"31"},{"size":890,"mtime":1610722121051,"results":"53","hashOfConfig":"31"},{"size":4513,"mtime":1610722186418,"results":"54","hashOfConfig":"31"},{"size":9017,"mtime":1610571117734,"results":"55","hashOfConfig":"31"},{"size":9293,"mtime":1610724336266,"results":"56","hashOfConfig":"31"},{"size":4706,"mtime":1610722121051,"results":"57","hashOfConfig":"31"},{"size":2446,"mtime":1610723454330,"results":"58","hashOfConfig":"31"},{"size":2046,"mtime":1610724366895,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"puktd3",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/index.jsx",[],["123","124"],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/reportWebVitals.js",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/App.jsx",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/DropZone.jsx",["125"],"import React, {useEffect, useState} from 'react'\nimport styled from 'styled-components'\nimport XLSX from 'xlsx'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {UploadInput} from \"./UploadInput\";\nimport {setColumns, setData, setFileName} from \"./redux-base-logic/common/actions\";\nimport {makeColumns} from \"./redux-base-logic/lib/utils\";\nimport {Container} from \"react-bootstrap\";\n\nconst UploadWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 500px;\n  height: 400px;\n  margin: 5% auto;\n  background: ${({isDragging}) => isDragging ? 'pink' : 'whitesmoke'};\n  border: 2px dashed black;\n}\n`\nconst DropZoneTitle = styled.div`\n  font-size: 25px;\n  text-align: center;\n  width: 100%;\n  padding: 5px;\n`\nconst SuccessTitle = styled.h3`\n  color: #5a5a5a;\n`\n\nexport const DropZone = ({ history }) => {\n    const [isDragging, setIsDragging] = useState(false)\n    const fileName = useSelector(state => state.data.fileName)\n    const dispatch = useDispatch()\n\n    const handleDragEnter = e => {\n        e.preventDefault()\n        e.stopPropagation()\n        console.log('ENTER')\n        if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\n            setIsDragging(true)\n        }\n    }\n\n    const handleDragLeave = e => {\n        e.preventDefault()\n        e.stopPropagation()\n        setIsDragging(false)\n    }\n\n    const handleDrop = e => {\n        e.preventDefault()\n        e.stopPropagation()\n        setIsDragging(false)\n        const files = e.dataTransfer.files, f = files[0]\n        const reader = new FileReader()\n\n        reader.onload = () => {\n            if (files.length) {\n                handleFile(files[0])\n            }\n        }\n        reader.readAsArrayBuffer(f)\n    }\n\n    const handleFile = async (file) => {\n        const reader = new FileReader()\n        const rABS = !!reader.readAsBinaryString\n        reader.onload = async (e) => {\n            const bstr = e.target.result\n            const wb = XLSX.read(bstr, {type: rABS ? 'binary' : 'array'})\n            const wsname = wb.SheetNames[0]\n            const ws = wb.Sheets[wsname]\n            const data = XLSX.utils.sheet_to_json(ws, {header: 1})\n            dispatch(setData(data))\n            dispatch(setColumns(makeColumns(ws['!ref'])))\n            dispatch(setFileName(file.name))\n        }\n        if (rABS) reader.readAsBinaryString(file); else reader.readAsArrayBuffer(file);\n    }\n    const userLogin = useSelector(state => state.userLogin)\n    const {userInfo} = userLogin\n\n    useEffect(() => {\n        if(!userInfo) {\n            history.push('/login')\n        }\n    }, [userInfo])\n\n    return (\n        <Container>\n            <UploadWrapper isDragging={isDragging} onDragEnter={handleDragEnter} onDragLeave={handleDragLeave}\n                           onDrop={handleDrop}>\n                <DropZoneTitle>\n                    {\n                        fileName ? <SuccessTitle>{fileName} <br/>Успішно завантажено <br/> <strong\n                            style={{textDecoration: \"underline\"}}>натисніть показати\n                            таблицю</strong></SuccessTitle> : 'Перетягніть сюди файл'\n                    }\n                </DropZoneTitle>\n                <UploadInput handleFile={handleFile}/>\n            </UploadWrapper>\n        </Container>\n    )\n}\n","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/Header.jsx",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/UploadInput.jsx",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-components/reducers/loadTableReducer.js",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-components/constants/loadTableConstants.js",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/pages/RegisterPage.jsx",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/pages/LoginPage.jsx",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/FormContainer.jsx",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/Message.jsx",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/Loader.jsx",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-base-logic/common/actions.js",["126"],"import * as actions from './constants'\nimport axios from \"axios\";\n\nexport const setData = (payload) => async (dispatch, getState) => {\n    try {\n        dispatch({type: actions.SET_DATA_REQUEST})\n        const dataObject = []\n        if (payload.length > 0) {\n            payload.slice(1).map(el => {\n                if (el.length > 0 && el.length < 85) {\n                    dataObject.push({...el})\n                }\n            })\n        }\n\n        const { userLogin: { userInfo } } = getState()\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data: {success} } = await axios.post('/api/table', dataObject, config)\n        if (success) {\n            localStorage.setItem('parsedData', JSON.stringify(dataObject))\n            dispatch({type: actions.SET_DATA_SUCCESS, payload: dataObject})\n        }\n    } catch (error) {\n        dispatch({\n            type: actions.SET_DATA_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message\n        })\n    }\n}\n\nexport const setDataUpdate = (payload) => async (dispatch, getState) => {\n    dispatch({type: actions.SET_DATA_REQUEST})\n\n    const { userLogin: { userInfo } } = getState()\n    const config = {\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${userInfo.token}`\n        }\n    }\n\n    const { data: {success} } = await axios.post('/api/table', payload, config)\n\n    if (success) {\n        localStorage.setItem('parsedData', JSON.stringify(payload))\n        dispatch({type: actions.SET_DATA_SUCCESS, payload})\n    }\n}\n\nexport const setColumns = payload => ({type: actions.SET_COLUMNS, payload})\nexport const setFileName = payload => ({type: actions.SET_FILE_NAME, payload})\nexport const clearData = () => ({type: actions.CLEAR_DATA})","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-base-logic/lib/store/index.js",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-base-logic/lib/utils/index.js",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-base-logic/common/constants.js",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-base-logic/lib/store/store.js",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-base-logic/lib/utils/makeCols.js",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-base-logic/lib/utils/logger.js",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-base-logic/common/reducer.js",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-components/reducers/userReducer.js",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-components/constants/userConstants.js",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-components/actions/userActions.js",["127","128","129"],"import {\n    USER_DETAILS_FAIL,\n    USER_DETAILS_REQUEST, USER_DETAILS_RESET,\n    USER_DETAILS_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGOUT,\n    USER_REGISTER_FAIL,\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_RESET,\n    USER_UPDATE_PROFILE_SUCCESS\n} from \"../constants/userConstants\";\nimport axios from \"axios\";\nimport {SET_DATA_RESET} from \"../../redux-base-logic/common/constants\";\n\nexport const register = (name, email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const {data} = await axios.post(\n            '/api/users',\n            {name, email, password},\n            config\n        )\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message\n        })\n    }\n}\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const {data} = await axios.post(\n            '/api/users/login',\n            {email, password},\n            config\n        )\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n        localStorage.setItem('userInfo', JSON.stringify(data))\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message\n        })\n    }\n}\n\nexport const logout = () => async (dispatch) => {\n    localStorage.removeItem('userInfo')\n    // localStorage.removeItem('parsedData')\n    dispatch({type: USER_LOGOUT})\n    // dispatch({type: USER_UPDATE_PROFILE_RESET})\n    // dispatch({type: USER_DETAILS_RESET})\n    // dispatch({type: SET_DATA_RESET})\n}\n\nexport const getUserProfile = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/profile`,\n            config\n        )\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message\n        })\n    }\n}\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/profile`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n        localStorage.setItem('userInfo', JSON.stringify(data))\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message\n        })\n    }\n}","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/data/data.js",[],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/TableLoad.jsx",["130","131","132","133","134"],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/pages/ProfilePage.jsx",["135"],"import React, {useState, useEffect} from \"react\"\nimport {Form, Button} from \"react-bootstrap\"\nimport {useDispatch, useSelector} from \"react-redux\"\nimport {getUserProfile, updateUserProfile} from \"../redux-components/actions/userActions\";\nimport Message from \"../Message\";\nimport Loader from \"../Loader\";\nimport FormContainer from \"../FormContainer\";\n\nconst ProfileScreen = ({history}) => {\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const userLogin = useSelector(state => state.userLogin)\n    const {userInfo} = userLogin\n\n    const userDetails = useSelector(state => state.userDetails)\n    const {user, loading, error} = userDetails\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const {success} = userUpdateProfile\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if (password !== confirmPassword) {\n            setMessage('Password is not match')\n        } else {\n            dispatch(updateUserProfile({id: user._id, name, email, password}))\n        }\n    }\n\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            if (!user || !user.name || success) {\n                dispatch(getUserProfile('profile'))\n            } else {\n                debugger\n                setName(user.name)\n                setEmail(user.email)\n            }\n        }\n    }, [userInfo, history, user, success])\n\n    return (\n        <>\n            {message && <Message variant='danger'>{message}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {success && <Message variant='success'>Profile Updated</Message>}\n            {loading ? <Loader/> :\n                (\n                    <FormContainer>\n                        <h2>User profile</h2>\n                        <Form onSubmit={submitHandler}>\n                            <Form.Group controlId='name'>\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control\n                                    type='name'\n                                    placeholder='Enter name'\n                                    value={name}\n                                    onChange={e => setName(e.target.value)}\n                                />\n                            </Form.Group>\n\n                            <Form.Group controlId='email'>\n                                <Form.Label>Email Address</Form.Label>\n                                <Form.Control\n                                    type='email'\n                                    placeholder='Enter email'\n                                    value={email}\n                                    onChange={e => setEmail(e.target.value)}\n                                />\n                            </Form.Group>\n\n                            <Form.Group controlId='password'>\n                                <Form.Label>Password</Form.Label>\n                                <Form.Control\n                                    type='password'\n                                    placeholder='Enter password'\n                                    value={password}\n                                    onChange={e => setPassword(e.target.value)}\n                                />\n                            </Form.Group>\n\n                            <Form.Group controlId='confirmPassword'>\n                                <Form.Label>Confirm password</Form.Label>\n                                <Form.Control\n                                    type='password'\n                                    placeholder='Enter confirmPassword'\n                                    value={confirmPassword}\n                                    onChange={e => setConfirmPassword(e.target.value)}\n                                />\n                            </Form.Group>\n\n                            <Button type='submit' variant='primary'>\n                                UPDATE\n                            </Button>\n                        </Form>\n                    </FormContainer>\n                )}\n        </>\n    )\n}\n\nexport default ProfileScreen","/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/pages/ChangeVersionTable.jsx",["136"],"/home/vladislav/Documents/GitHub/qualification_work/frontend/src/components/redux-components/actions/loadTableActions.js",[],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":89,"column":8,"nodeType":"143","endLine":89,"endColumn":18,"suggestions":"144"},{"ruleId":"145","severity":1,"message":"146","line":9,"column":37,"nodeType":"147","messageId":"148","endLine":9,"endColumn":39},{"ruleId":"149","severity":1,"message":"150","line":3,"column":27,"nodeType":"151","messageId":"152","endLine":3,"endColumn":45},{"ruleId":"149","severity":1,"message":"153","line":14,"column":5,"nodeType":"151","messageId":"152","endLine":14,"endColumn":30},{"ruleId":"149","severity":1,"message":"154","line":18,"column":9,"nodeType":"151","messageId":"152","endLine":18,"endColumn":23},{"ruleId":"155","severity":1,"message":"156","line":136,"column":29,"nodeType":"157","endLine":136,"endColumn":63},{"ruleId":"155","severity":1,"message":"156","line":141,"column":29,"nodeType":"157","endLine":141,"endColumn":63},{"ruleId":"155","severity":1,"message":"156","line":146,"column":29,"nodeType":"157","endLine":146,"endColumn":63},{"ruleId":"155","severity":1,"message":"156","line":151,"column":29,"nodeType":"157","endLine":152,"endColumn":56},{"ruleId":"141","severity":1,"message":"158","line":209,"column":8,"nodeType":"143","endLine":209,"endColumn":17,"suggestions":"159"},{"ruleId":"141","severity":1,"message":"158","line":49,"column":8,"nodeType":"143","endLine":49,"endColumn":42,"suggestions":"160"},{"ruleId":"141","severity":1,"message":"161","line":22,"column":8,"nodeType":"143","endLine":22,"endColumn":33,"suggestions":"162"},"no-native-reassign",["163"],"no-negated-in-lhs",["164"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["165"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'USER_DETAILS_RESET' is defined but never used.","Identifier","unusedVar","'USER_UPDATE_PROFILE_RESET' is defined but never used.","'SET_DATA_RESET' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["166"],["167"],"React Hook useEffect has a missing dependency: 'dataTable'. Either include it or remove the dependency array.",["168"],"no-global-assign","no-unsafe-negation",{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},"Update the dependencies array to be: [history, userInfo]",{"range":"177","text":"178"},"Update the dependencies array to be: [dispatch, tableId]",{"range":"179","text":"180"},"Update the dependencies array to be: [userInfo, history, user, success, dispatch]",{"range":"181","text":"182"},"Update the dependencies array to be: [dataTable, dispatch, successRemove]",{"range":"183","text":"184"},[2651,2661],"[history, userInfo]",[6471,6480],"[dispatch, tableId]",[1611,1645],"[userInfo, history, user, success, dispatch]",[819,844],"[dataTable, dispatch, successRemove]"]